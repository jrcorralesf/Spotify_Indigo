{"version":3,"sources":["serviceWorker.js","spotify.js","pages/Login.js","components/StateProvider.js","components/ArtistPost.js","pages/SearchArtist.js","components/TracksPost.js","pages/SearchSong.js","components/SongPost.js","pages/Releases.js","components/SongRow.js","components/AlbumRow.js","pages/AlbumInfo.js","Routes.js","pages/Home.js","App.js","components/reducer.js","index.js"],"names":["Boolean","window","location","hostname","match","accessUrl","join","Login","className","src","alt","href","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","ArtistPost","track","dispatch","item","to","onClick","type","images","url","name","SearchArtist","artist","artists","items","map","TracksPost","album","SearchSong","songs","tracks","SongPost","Releases","new_releases","albums","SongRow","console","log","duration","seconds","Math","floor","minutes","msToTime","duration_ms","AlbumRow","release_date","AlbumInfo","spotify","artistTop","artistRelated","artistAlbum","useEffect","getArtistTopTracks","id","then","response","getArtistRelatedArtists","limit","getArtistAlbums","itemMap","Routes","exact","path","component","Home","typeArtist","typeSong","token","setAccessToken","searchArtists","searchTracks","viewBox","fill","d","onChange","e","currentTarget","placeholder","SpotifyWebApi","App","hash","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","getNewReleases","state","action","ReactDOM","render","StrictMode","user","playlists","discover_weekly","top_artists","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"qdAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,kCCSOC,G,YAAS,UA1BM,yCA0BN,sBAxBL,mCAwBK,yBAvBF,iDAuBE,kBAtBP,CACb,8BACA,4BACA,2BACA,gBACA,6BACA,wBACA,+BAeyGC,KACzG,OADoB,0CCVPC,MAZf,WACE,OACE,yBAAKC,UAAU,SACb,yBACEC,IAAI,0EACJC,IAAI,KAEN,uBAAGC,KAAMN,GAAT,sB,uBCVOO,G,YAAeC,2BAEfC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,SAA1B,OAC3B,kBAACL,EAAaM,SAAd,CAAuBC,MAAOC,qBAAWL,EAASC,IAC/CC,IAIQI,EAAgB,kBAAMC,qBAAWV,ICmB/BW,MAvBf,YAAgC,IAAD,EAATC,EAAS,EAATA,MAAS,EACAH,IADA,mBACZI,GADY,KACnBC,KADmB,MAG3B,OAGI,kBAAC,IAAD,CAAMlB,UAAU,OAAQmB,GAAG,QAC3BC,QAAS,kBAAIH,EACT,CAACI,KAAM,WACPH,KAAMF,MAEN,yBAAKhB,UAAU,YACX,yBAAKA,UAAU,kBAAkBC,IAAG,UAAEe,EAAMM,OAAO,UAAf,aAAE,EAAiBC,IAAKrB,IAAI,KAChE,yBAAKF,UAAU,kBACX,4BACKgB,EAAMQ,UCChBC,MAhBf,WAAyB,IAAD,EACWZ,IADX,mBACXa,EADW,KACXA,OACT,OAFoB,KAGhB,yBAAK1B,UAAU,eACP,yBAAKA,UAAU,gBAAf,IAA+B,8CAC/B,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,eAAf,OACK0B,QADL,IACKA,OADL,EACKA,EAAQC,QAAQC,MAAMC,KAAI,SAACX,GAAD,OAC3B,kBAAC,EAAD,CAAaF,MAAOE,W,MCI7BY,MAdf,YAA8B,IAAD,EAARd,EAAQ,EAARA,MACjB,OACI,yBAAKhB,UAAU,YACf,yBAAKA,UAAU,kBAAkBC,IAAG,UAAEe,EAAMe,MAAMT,OAAO,UAArB,aAAE,EAAuBC,IAAKrB,IAAI,KACtE,yBAAKF,UAAU,kBACX,4BAAKgB,EAAMQ,MACX,2BACCR,EAAMW,QAAQE,KAAI,SAACH,GAAD,OAAYA,EAAOF,QAAM1B,KAAK,UCY9CkC,MAjBf,WAAuB,IAAD,EACYnB,IADZ,mBACToB,EADS,KACTA,MAET,OAHkB,KAId,yBAAKjC,UAAU,eACP,yBAAKA,UAAU,gBAAf,IAA+B,6CAC/B,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,eAAf,OACKiC,QADL,IACKA,OADL,EACKA,EAAOC,OAAON,MAAMC,KAAI,SAACX,GAAD,OACzB,kBAAC,EAAD,CAAaF,MAAOE,W,YCI7BiB,MAff,YAA8B,IAAD,EAATnB,EAAS,EAATA,MAEhB,OACQ,yBAAKhB,UAAU,YACf,yBAAKA,UAAU,kBAAkBC,IAAG,UAAEe,EAAMM,OAAO,UAAf,aAAE,EAAiBC,IAAKrB,IAAI,KAChE,yBAAKF,UAAU,kBACX,4BAAKgB,EAAMQ,MACX,2BACCR,EAAMW,QAAQE,KAAI,SAACH,GAAD,OAAYA,EAAOF,QAAM1B,KAAK,UCalDsC,MAnBf,WAAqB,IAAD,EACqBvB,IADrB,mBACPwB,EADO,KACPA,aAET,OAHgB,KAKR,yBAAKrC,UAAU,eACX,yBAAKA,UAAU,gBAAf,IAA+B,6CAC/B,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,eAAf,OACKqC,QADL,IACKA,OADL,EACKA,EAAcC,OAAOV,MAAMC,KAAI,SAACX,GAAD,OAChC,kBAAC,EAAD,CAAWF,MAAOE,W,YCe3BqB,MAhBf,YAA6B,IAAD,IAATvB,EAAS,EAATA,MAEjB,OADAwB,QAAQC,IAAIzB,GAEV,yBAAKhB,UAAU,WACb,yBAAKA,UAAU,iBAAiBC,IAAG,OAAEe,QAAF,IAAEA,GAAF,UAAEA,EAAOe,aAAT,iBAAE,EAAcT,OAAO,UAAvB,aAAE,EAAyBC,IAAKrB,IAAI,KACvE,yBAAKF,UAAU,iBACb,4BAAKgB,EAAMQ,MACX,2BAAIR,EAAMe,MAAMP,OAElB,yBAAKxB,UAAU,iBACX,2BArBV,SAAkB0C,GAChB,IACEC,EAAUC,KAAKC,MAAOH,EAAW,IAAQ,IACzCI,EAAUF,KAAKC,MAAOH,EAAQ,IAAkB,IAKlD,OAHAI,EAAWA,EAAU,GAAM,IAAMA,EAAUA,GAGzB,KAFlBH,EAAWA,EAAU,GAAM,IAAMA,EAAUA,GAe/BI,CAAS/B,EAAMgC,iB,MCPdC,MAdf,YAA8B,IAAD,EAATjC,EAAS,EAATA,MAChB,OACQ,yBAAKhB,UAAU,YACf,yBAAKA,UAAU,kBAAkBC,IAAG,UAAEe,EAAMM,OAAO,UAAf,aAAE,EAAiBC,IAAKrB,IAAI,KAChE,yBAAKF,UAAU,kBACX,4BAAKgB,EAAMQ,MACX,2BACCR,EAAMkC,iBCmERC,MArEf,WAAsB,IAAD,oBACwDtC,IADxD,0BACTK,EADS,EACTA,KAAMkC,EADG,EACHA,QAASC,EADN,EACMA,UAAUC,EADhB,EACgBA,cAAcC,EAD9B,EAC8BA,YAActC,EAD5C,KA0BjB,OAxBAuC,qBAAU,WACNJ,EAAQK,mBAAmBvC,EAAKwC,GAAI,MAAMC,MAAK,SAACC,GAAD,OAC/C3C,EAAS,CACTI,KAAM,iBACNgC,UAAUO,OAIVR,EAAQS,wBAAwB3C,EAAKwC,GAAG,CAAEI,MAAQ,IAAIH,MAAK,SAACC,GAAD,OAC3D3C,EAAS,CACTI,KAAM,qBACNiC,cAAcM,OAIdR,EAAQW,gBAAgB7C,EAAKwC,GAAG,CAAEI,MAAQ,IAAIH,MAAK,SAACC,GAAD,OACnD3C,EAAS,CACTI,KAAM,mBACNkC,YAAYK,SAIb,CAAC1C,EAAMD,IAGN,yBAAKjB,UAAU,aACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,0BACf,yBAAMA,UAAU,eAAeC,IAAG,UAAEiB,EAAKI,OAAO,UAAd,aAAE,EAAgBC,IAAKrB,IAAI,KAC7D,gCAAMgB,EAAKM,KAAX,MAEA,yBAAKxB,UAAU,mCACf,6BACA,4CAAkBkB,EAAKM,KAAvB,KACA,6BACA,yBAAMxB,UAAU,wBAAwBC,IAAG,OAAEqD,QAAF,IAAEA,GAAF,UAAEA,EAAe3B,QAAQ,UAAzB,iBAAE,EAA2BL,OAAO,UAApC,aAAE,EAAsCC,IAAKrB,IAAI,KAC5F,yBAAMF,UAAU,wBAAwBC,IAAG,OAAEqD,QAAF,IAAEA,GAAF,UAAEA,EAAe3B,QAAQ,UAAzB,iBAAE,EAA2BL,OAAO,UAApC,aAAE,EAAsCC,IAAKrB,IAAI,KAC5F,yBAAMF,UAAU,wBAAwBC,IAAG,OAAEqD,QAAF,IAAEA,GAAF,UAAEA,EAAe3B,QAAQ,UAAzB,iBAAE,EAA2BL,OAAO,UAApC,aAAE,EAAsCC,IAAKrB,IAAI,KAC5F,yBAAMF,UAAU,wBAAwBC,IAAG,OAAEqD,QAAF,IAAEA,GAAF,UAAEA,EAAe3B,QAAQ,UAAzB,iBAAE,EAA2BL,OAAO,UAApC,aAAE,EAAsCC,IAAKrB,IAAI,OAIhG,yBAAKF,UAAU,cACX,wCACA,yBAAKA,UAAU,iBAAf,OACCuD,QADD,IACCA,OADD,EACCA,EAAa3B,MAAMC,KAAI,SAACmC,GAAD,OACxB,kBAAC,EAAD,CAAWhD,MAAOgD,QAIlB,6BACA,6BACA,6BACA,yBAAKhE,UAAU,cACf,qDACA,8BAEA,yBAAKA,UAAU,oBAAf,OACCqD,QADD,IACCA,OADD,EACCA,EAAWnB,OAAOL,KAAI,SAACmC,GAAD,OACvB,kBAAC,EAAD,CAAShD,MAAOgD,WCrDjBC,EARP,kBAAC,IAAD,KACY,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAAUC,UAAWpC,IACvC,kBAAC,IAAD,CAAOkC,OAAK,EAACC,KAAK,WAAYC,UAAW3C,IACzC,kBAAC,IAAD,CAAOyC,OAAK,EAACC,KAAK,QAASC,UAAWjB,IACtC,kBAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,IAAKC,UAAWhC,K,iBCsEvCiC,MA1Ef,YAA4B,IAAZjB,EAAW,EAAXA,QAAW,EAEyBvC,IAFzB,0BAEfyD,EAFe,EAEfA,WAAWC,EAFI,EAEJA,SAASC,EAFL,EAEKA,MAAQvD,EAFb,KAsBvB,OAlBAuC,qBAAU,WACNJ,EAAQqB,eAAeD,GAEvBpB,EAAQsB,cAAcJ,EAAW,CAAER,MAAQ,KAAKH,MAAK,SAACC,GAAD,OACrD3C,EAAS,CACTI,KAAM,gBACNK,OAAOkC,OAIPR,EAAQuB,aAAaJ,EAAS,CAAET,MAAQ,KAAKH,MAAK,SAACC,GAAD,OAClD3C,EAAS,CACTI,KAAM,eACNY,MAAM2B,SAGP,CAACU,EAAYC,EAAUtD,IAGtB,kBAAC,IAAD,KACA,yBAAKjB,UAAU,QAEX,yBAAKA,UAAU,cACX,6BACI,kBAAC,IAAD,CAAMmB,GAAG,KACL,yBAAMyD,QAAQ,eAAgB5E,UAAU,eACxC,0BAAM6E,KAAK,QAASC,EAAE,2uDAK9B,yBAAK9E,UAAU,mBACX,kBAAC,IAAD,CAAMmB,GAAG,YACT,yBAAKnB,UAAU,qBACP,kBAAC,IAAD,CAAaA,UAAU,eACvB,2BACA+E,SAAU,SAACC,GAAD,OAAK/D,EACX,CAACI,KAAM,oBACPiD,WAAYU,EAAEC,cAActE,SAChCuE,YAAY,qBACZ7D,KAAK,WAIb,kBAAC,IAAD,CAAMF,GAAG,UACT,yBAAKnB,UAAU,qBACP,kBAAC,IAAD,CAAYA,UAAU,eACtB,2BACA+E,SAAU,SAACC,GAAD,OAAK/D,EACX,CAACI,KAAM,kBACPkD,SAAUS,EAAEC,cAActE,SAC9BuE,YAAY,wBACZ7D,KAAK,aAQrB,yBAAKrB,UAAU,YAEFiE,MCjEnBb,EAAU,IAAI+B,IA0CLC,MAxCf,WAAgB,IAAD,EACiBvE,IADjB,mBACJ2D,EADI,KACJA,MAASvD,EADL,KAgCb,OA7BAuC,qBAAU,WAER,IAAM6B,EdDD5F,OAAOC,SAAS2F,KACpBC,UAAU,GACVC,MAAM,KACNC,QAAO,SAACC,EAASvE,GAChB,IAAIwE,EAAQxE,EAAKqE,MAAM,KAGvB,OAFAE,EAAQC,EAAM,IAAMC,mBAAmBD,EAAM,IAEtCD,IACN,IcNHhG,OAAOC,SAAS2F,KAAO,GACvB,IAAIO,EAASP,EAAKQ,aAEdD,IACFxC,EAAQqB,eAAemB,GAEvB3E,EAAS,CACPI,KAAM,YACNmD,MAAOoB,IAGTxC,EAAQ0C,eAAe,CAAChC,MAAQ,KAAKH,MAAK,SAACC,GACzC3C,EAAS,CACPI,KAAM,mBACNgB,aAAcuB,OAIlB3C,EAAS,CACPI,KAAM,cACN+B,QAASA,OAIV,CAACoB,EAAQvD,IAGZ,yBAAKjB,UAAU,QACXwE,GAAS,kBAAC,EAAD,MACVA,GAAS,kBAAC,EAAD,CAAMpB,QAASA,M,OC+ChB7C,EA7EC,SAACwF,EAAOC,GAGtB,OAFCxD,QAAQC,IAAIuD,GACXxD,QAAQC,IAAIsD,GACNC,EAAO3E,MAEb,IAAK,WACH,OAAO,2BACF0E,GADL,IAEE7E,KAAM8E,EAAO9E,OAGf,IAAK,mBACH,OAAO,2BACF6E,GADL,IAEE1D,aAAc2D,EAAO3D,eAG3B,IAAK,gBACH,OAAO,2BACF0D,GADL,IAEErE,OAAQsE,EAAOtE,SAGnB,IAAK,eACH,OAAO,2BACFqE,GADL,IAEE9D,MAAO+D,EAAO/D,QAIlB,IAAK,YACH,OAAO,2BACF8D,GADL,IAEEvB,MAAOwB,EAAOxB,QAGlB,IAAK,cACH,OAAO,2BACFuB,GADL,IAEE3C,QAAS4C,EAAO5C,UAGpB,IAAK,iBACH,OAAO,2BACF2C,GADL,IAEE1C,UAAW2C,EAAO3C,YAGtB,IAAK,qBACH,OAAO,2BACF0C,GADL,IAEEzC,cAAe0C,EAAO1C,gBAG1B,IAAK,mBACH,OAAO,2BACFyC,GADL,IAEExC,YAAayC,EAAOzC,cAGtB,IAAK,oBACL,OAAO,2BACFwC,GADL,IAEEzB,WAAY0B,EAAO1B,aAGrB,IAAK,kBACL,OAAO,2BACFyB,GADL,IAEExB,SAAUyB,EAAOzB,WAGrB,QACE,OAAOwB,ICjFbE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,CAAe3F,aDVS,CAC1B4F,KAAM,KACNC,UAAW,GACXjD,QAAS,KACTf,aAAc,KACdiE,gBAAiB,KACjBC,YAAa,KACbrF,KAAM,KACNe,MAAO,KACPP,OAAQ,KACR2B,UAAW,KACXC,cAAc,KACdC,YAAa,KACbe,WAAY,GACZC,SAAU,ICJmChE,QAASA,GAClD,kBAAC,EAAD,QAGJiG,SAASC,eAAe,SjBoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjD,MAAK,SAAAkD,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxE,QAAQwE,MAAMA,EAAMC,c","file":"static/js/main.7fb37494.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// https://developer.spotify.com/documentation/web-playback-sdk/quick-start/#\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\n// Replace with your app's client ID, redirect URI and desired scopes\nconst clientId = \"3901f98d838d42e9b250b08caf4867c4\";\nconst redirectUri = \"https://spotify-indigo.jrcorralesf.vercel.app/\";\nconst scopes = [\n  \"user-read-currently-playing\",\n  \"user-read-recently-played\",\n  \"user-read-playback-state\",\n  \"user-top-read\",\n  \"user-modify-playback-state\",\n  \"playlist-read-private\",\n  \"playlist-read-collaborative\",\n];\n\nexport const getTokenFromResponse = () => {\n  return window.location.hash\n    .substring(1)\n    .split(\"&\")\n    .reduce((initial, item) => {\n      var parts = item.split(\"=\");\n      initial[parts[0]] = decodeURIComponent(parts[1]);\n\n      return initial;\n    }, {});\n};\n\nexport const accessUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n  \"%20\"\n)}&response_type=token&show_dialog=true`;\n","import React from \"react\";\n\nimport \"../styles/Login.css\";\nimport { accessUrl } from \"../spotify\";\n\nfunction Login() {\n  return (\n    <div className=\"login\">\n      <img\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\n        alt=\"\"\n      />\n      <a href={accessUrl}>LOGIN TO SPOTIFY</a>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport \"../styles/ArtistPost.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction ArtistPost({ track }) {\r\n    const [{item}, dispatch] = useStateValue();\r\n    \r\n    return (\r\n        //se captura el evento de dar click sobre un artista y se guarda el objeto json de este elemento\r\n        //para utilizarlo en la pagina de informacion del artista\r\n        <Link className=\"link\"  to=\"/info\"\r\n        onClick={()=>dispatch(\r\n            {type: \"SET_ITEM\",\r\n            item: track})}\r\n        > \r\n            <div className=\"SongPost\" >\r\n                <img className=\"songPost__image\" src={track.images[0]?.url} alt=\"\" />\r\n                <div className=\"songPost__info\">\r\n                    <h1>\r\n                        {track.name} \r\n                    </h1>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default ArtistPost;","import React from 'react';\r\n\r\nimport \"../styles/SearchArtist.css\";\r\nimport ArtistPost from \"../components/ArtistPost\";\r\nimport { useStateValue } from \"../components/StateProvider\";\r\n\r\nfunction SearchArtist() {\r\n    const [{ artist }, dispatch] = useStateValue();\r\n    return (\r\n        <div className=\"releaseBody\" >\r\n                <div className=\"titleRelease\"> <h2>Artists Found</h2></div>\r\n                <div className=\"sliderContainer\"  >\r\n                    <div className=\"body__songs\">\r\n                        {artist?.artists.items.map((item) => (\r\n                        <ArtistPost  track={item} />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default SearchArtist;","import React from 'react';\r\n\r\nimport \"../styles/ArtistPost.css\";\r\n\r\nfunction TracksPost({track}) {\r\n    return (\r\n        <div className=\"SongPost\" >\r\n        <img className=\"songPost__image\" src={track.album.images[0]?.url} alt=\"\" />\r\n        <div className=\"songPost__info\">\r\n            <h1>{track.name}</h1>\r\n            <p>\r\n            {track.artists.map((artist) => artist.name).join(\", \")} \r\n            </p>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TracksPost;","import React from 'react';\r\n\r\nimport \"../styles/SearchSong.css\";\r\nimport TracksPost from \"../components/TracksPost\";\r\nimport { useStateValue } from \"../components/StateProvider\";\r\n\r\nfunction SearchSong() {\r\n    const [{ songs }, dispatch] = useStateValue();\r\n    \r\n    return (\r\n        <div className=\"releaseBody\" >\r\n                <div className=\"titleRelease\"> <h2>Tracks Found</h2></div>\r\n                <div className=\"sliderContainer\"  >\r\n                    <div className=\"body__songs\">\r\n                        {songs?.tracks.items.map((item) => (\r\n                        <TracksPost  track={item} />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchSong;","import React from \"react\";\r\n\r\nimport \"../styles/SongPost.css\";\r\n\r\nfunction SongPost({ track }) {\r\n    //console.log(track); // ELIMINAR\r\n    return (\r\n            <div className=\"SongPost\" >\r\n            <img className=\"songPost__image\" src={track.images[0]?.url} alt=\"\" />\r\n            <div className=\"songPost__info\">\r\n                <h1>{track.name}</h1>\r\n                <p>\r\n                {track.artists.map((artist) => artist.name).join(\", \")} \r\n                </p>\r\n            </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default SongPost;\r\n","import React from 'react';\r\n\r\nimport \"../styles/Releases.css\";\r\nimport SongPost from \"../components/SongPost\";\r\nimport { useStateValue } from \"../components/StateProvider\";\r\n\r\nfunction Releases() {\r\n    const [{ new_releases }, dispatch] = useStateValue();\r\n\r\n    return (\r\n        \r\n            <div className=\"releaseBody\" >\r\n                <div className=\"titleRelease\"> <h2>New Releases</h2></div>\r\n                <div className=\"sliderContainer\"  >\r\n                    <div className=\"body__songs\">\r\n                        {new_releases?.albums.items.map((item) => (\r\n                        <SongPost  track={item} />\r\n                        ))}\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Releases;","import React from \"react\";\n\nimport \"../styles/SongRow.css\";\n\nfunction msToTime(duration) {\n  let \n    seconds = Math.floor((duration / 1000) % 60),\n    minutes = Math.floor((duration / (1000 * 60)) % 60);\n\n  minutes = (minutes < 10) ? \"0\" + minutes : minutes;\n  seconds = (seconds < 10) ? \"0\" + seconds : seconds;\n\n  return  minutes + \":\" + seconds;\n}\n\nfunction SongRow({ track }) {\n  console.log(track);\n  return (\n    <div className=\"songRow\" >\n      <img className=\"songRow__album\" src={track?.album?.images[0]?.url} alt=\"\" />\n      <div className=\"songRow__info\">\n        <h1>{track.name}</h1>\n        <p>{track.album.name}</p>\n      </div>\n      <div className=\"songRow__time\">\n          <p>{msToTime(track.duration_ms)}</p>\n      </div>      \n    </div>\n  );\n}\n\nexport default SongRow;\n","import React from \"react\";\r\n\r\nimport \"../styles/AlbumRow.css\";\r\n\r\nfunction AlbumRow({ track }) {\r\n    return (\r\n            <div className=\"AlbumRow\" >\r\n            <img className=\"AlbumRow__image\" src={track.images[0]?.url} alt=\"\" />\r\n            <div className=\"AlbumRow__info\">\r\n                <h1>{track.name}</h1>\r\n                <p>\r\n                {track.release_date} \r\n                </p>\r\n            </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default AlbumRow;\r\n","import React, { useEffect  }  from 'react';\r\n\r\nimport \"../styles/AlbumInfo.css\";\r\nimport SongRow from \"../components/SongRow\";\r\nimport AlbumRow from \"../components/AlbumRow\";\r\n\r\nimport { useStateValue } from \"../components/StateProvider\";\r\n\r\n\r\nfunction AlbumInfo() {\r\n    const [{item, spotify, artistTop,artistRelated,artistAlbum}, dispatch] = useStateValue();\r\n    useEffect(() => {\r\n        spotify.getArtistTopTracks(item.id, 'CO').then((response) =>\r\n        dispatch({\r\n        type: \"GET_ARTIST_TOP\",\r\n        artistTop:response,\r\n        })\r\n        );\r\n\r\n        spotify.getArtistRelatedArtists(item.id,{ limit : 4}).then((response) =>\r\n        dispatch({\r\n        type: \"GET_ARTIST_RELATED\",\r\n        artistRelated:response,\r\n        })\r\n        );\r\n\r\n        spotify.getArtistAlbums(item.id,{ limit : 5}).then((response) =>\r\n        dispatch({\r\n        type: \"GET_ARTIST_ALBUM\",\r\n        artistAlbum:response,\r\n        })\r\n        );\r\n\r\n    }, [item, dispatch]);\r\n\r\n    return (\r\n        <div className=\"info_body\">\r\n            <div className=\"info_left\">\r\n                <div className=\"artist_image_container\"> \r\n                <img  className=\"artist_image\" src={item.images[0]?.url} alt=\"\" />\r\n                <h2> {item.name} </h2>\r\n                </div>\r\n                <div className=\"artist_related_artist_container\"> \r\n                <hr />\r\n                <h4> Similars to {item.name} </h4>\r\n                <br />\r\n                <img  className=\"artist_related_artist\" src={artistRelated?.artists[0]?.images[0]?.url} alt=\"\" />\r\n                <img  className=\"artist_related_artist\" src={artistRelated?.artists[1]?.images[0]?.url} alt=\"\" />\r\n                <img  className=\"artist_related_artist\" src={artistRelated?.artists[2]?.images[0]?.url} alt=\"\" />\r\n                <img  className=\"artist_related_artist\" src={artistRelated?.artists[3]?.images[0]?.url} alt=\"\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"info_right\">\r\n                <h4> Albums </h4>\r\n                <div className=\"artist_albums\"> \r\n                {artistAlbum?.items.map((itemMap) => (\r\n                <AlbumRow  track={itemMap} />\r\n                ))}\r\n                </div>\r\n\r\n                <hr />\r\n                <br />\r\n                <br />\r\n                <div className=\"pop_tracks\"> \r\n                <h4> Most Popular Tracks </h4>\r\n                <hr />\r\n                </div>\r\n                <div className=\"artist_top_songs\"> \r\n                {artistTop?.tracks.map((itemMap) => (\r\n                <SongRow track={itemMap} />\r\n                ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlbumInfo;","import React from 'react';\r\nimport {Switch, Route } from \"react-router-dom\";\r\n\r\nimport SearchArtist from \"./pages/SearchArtist\";\r\nimport SearchSong from \"./pages/SearchSong\";\r\nimport Releases from \"./pages/Releases\";\r\nimport AlbumInfo from \"./pages/AlbumInfo\";\r\n\r\nconst Routes = (\r\n        <Switch>\r\n                    <Route exact path=\"/songs\"  component={SearchSong} />\r\n                    <Route exact path=\"/artists\"  component={SearchArtist} />\r\n                    <Route exact path=\"/info\"  component={AlbumInfo} />\r\n                    <Route exact path=\"/\"  component={Releases} />\r\n                </Switch>  \r\n);\r\n\r\nexport default Routes;\r\n","import React, { useEffect  } from \"react\";\r\nimport {HashRouter as Router, Link} from \"react-router-dom\";\r\n\r\nimport \"../styles/Home.css\";\r\nimport Routes from \"../Routes\";\r\nimport { useStateValue } from \"../components/StateProvider\";\r\n\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nfunction Home({ spotify }) {\r\n\r\n    const [{typeArtist,typeSong,token}, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        spotify.setAccessToken(token);\r\n\r\n        spotify.searchArtists(typeArtist,{ limit : 28}).then((response) =>\r\n        dispatch({\r\n        type: \"SEARCH_ARTIST\",\r\n        artist:response,\r\n        })\r\n        );\r\n\r\n        spotify.searchTracks(typeSong,{ limit : 28}).then((response) =>\r\n        dispatch({\r\n        type: \"SEARCH_SONGS\",\r\n        songs:response,\r\n        })\r\n        );\r\n    }, [typeArtist, typeSong, dispatch]);\r\n\r\n    return (\r\n        <Router>\r\n        <div className=\"home\">\r\n            \r\n            <div className=\"upperSpace\">\r\n                <div>\r\n                    <Link to=\"/\">\r\n                        <svg  viewBox=\"0 0 1134 340\"  className=\"logoSpotify\">\r\n                        <path fill=\"white\"  d=\"M8 171c0 92 76 168 168 168s168-76 168-168S268 4 176 4 8 79 8 171zm230 78c-39-24-89-30-147-17-14 2-16-18-4-20 64-15 118-8 162 19 11 7 0 24-11 18zm17-45c-45-28-114-36-167-20-17 5-23-21-7-25 61-18 136-9 188 23 14 9 0 31-14 22zM80 133c-17 6-28-23-9-30 59-18 159-15 221 22 17 9 1 37-17 27-54-32-144-35-195-19zm379 91c-17 0-33-6-47-20-1 0-1 1-1 1l-16 19c-1 1-1 2 0 3 18 16 40 24 64 24 34 0 55-19 55-47 0-24-15-37-50-46-29-7-34-12-34-22s10-16 23-16 25 5 39 15c0 0 1 1 2 1s1-1 1-1l14-20c1-1 1-1 0-2-16-13-35-20-56-20-31 0-53 19-53 46 0 29 20 38 52 46 28 6 32 12 32 22 0 11-10 17-25 17zm95-77v-13c0-1-1-2-2-2h-26c-1 0-2 1-2 2v147c0 1 1 2 2 2h26c1 0 2-1 2-2v-46c10 11 21 16 36 16 27 0 54-21 54-61s-27-60-54-60c-15 0-26 5-36 17zm30 78c-18 0-31-15-31-35s13-34 31-34 30 14 30 34-12 35-30 35zm68-34c0 34 27 60 62 60s62-27 62-61-26-60-61-60-63 27-63 61zm30-1c0-20 13-34 32-34s33 15 33 35-13 34-32 34-33-15-33-35zm140-58v-29c0-1 0-2-1-2h-26c-1 0-2 1-2 2v29h-13c-1 0-2 1-2 2v22c0 1 1 2 2 2h13v58c0 23 11 35 34 35 9 0 18-2 25-6 1 0 1-1 1-2v-21c0-1 0-2-1-2h-2c-5 3-11 4-16 4-8 0-12-4-12-12v-54h30c1 0 2-1 2-2v-22c0-1-1-2-2-2h-30zm129-3c0-11 4-15 13-15 5 0 10 0 15 2h1s1-1 1-2V93c0-1 0-2-1-2-5-2-12-3-22-3-24 0-36 14-36 39v5h-13c-1 0-2 1-2 2v22c0 1 1 2 2 2h13v89c0 1 1 2 2 2h26c1 0 1-1 1-2v-89h25l37 89c-4 9-8 11-14 11-5 0-10-1-15-4h-1l-1 1-9 19c0 1 0 3 1 3 9 5 17 7 27 7 19 0 30-9 39-33l45-116v-2c0-1-1-1-2-1h-27c-1 0-1 1-1 2l-28 78-30-78c0-1-1-2-2-2h-44v-3zm-83 3c-1 0-2 1-2 2v113c0 1 1 2 2 2h26c1 0 1-1 1-2V134c0-1 0-2-1-2h-26zm-6-33c0 10 9 19 19 19s18-9 18-19-8-18-18-18-19 8-19 18zm245 69c10 0 19-8 19-18s-9-18-19-18-18 8-18 18 8 18 18 18zm0-34c9 0 17 7 17 16s-8 16-17 16-16-7-16-16 7-16 16-16zm4 18c3-1 5-3 5-6 0-4-4-6-8-6h-8v19h4v-6h4l4 6h5zm-3-9c2 0 4 1 4 3s-2 3-4 3h-4v-6h4z\">    \r\n                        </path>\r\n                        </svg>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"searchContainer\">\r\n                    <Link to=\"/artists\">  \r\n                    <div className=\"searchBarReleases\">\r\n                            <SearchIcon  className=\"logoSearch\" />\r\n                            <input \r\n                            onChange={(e)=>dispatch(\r\n                                {type: \"SEARCH_NEW_ARTIST\",\r\n                                typeArtist: e.currentTarget.value})}\r\n                            placeholder=\"Busca por artista \"\r\n                            type=\"text\"\r\n                            />\r\n                    </div >\r\n                    </Link>\r\n                    <Link to=\"/songs\"> \r\n                    <div className=\"searchBarReleases\">\r\n                            <SearchIcon className=\"logoSearch\"/>\r\n                            <input \r\n                            onChange={(e)=>dispatch(\r\n                                {type: \"SEARCH_NEW_SONG\",\r\n                                typeSong: e.currentTarget.value})}\r\n                            placeholder=\"Busca por canción \"\r\n                            type=\"text\"\r\n                            />\r\n                            \r\n                    </div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"homeBody\">\r\n                \r\n                        {Routes}\r\n                \r\n            </div>\r\n        </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useEffect  } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\n\n\nimport './App.css';\nimport Login from \"./pages/Login\";\nimport Home from \"./pages/Home\";\nimport { getTokenFromResponse } from \"./spotify\";\nimport { useStateValue } from \"./components/StateProvider\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ token }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    // Authorization #1: Refreshable user authorization: Authorization Code Flow\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n\n    if (_token) {\n      spotify.setAccessToken(_token);\n\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      spotify.getNewReleases({limit : 28}).then((response) =>{\n        dispatch({\n          type: \"SET_NEW_RELEASES\",\n          new_releases: response,\n        });\n      });\n\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: spotify,\n      });\n\n    }\n    }, [token,  dispatch]);\n\n  return (\n    <div className=\"app\">\n      {!token && <Login />} \n      {token && <Home spotify={spotify} />}\n  </div>\n  );\n}\n\nexport default App;\n","\nexport const initialState = {\n  user: null,\n  playlists: [],\n  spotify: null,\n  new_releases: null,\n  discover_weekly: null,\n  top_artists: null,\n  item: null,\n  songs: null,\n  artist: null,\n  artistTop: null,\n  artistRelated:null,\n  artistAlbum: null,\n  typeArtist: \"\",\n  typeSong: \"\",};\n\nconst reducer = (state, action) => {\n   console.log(action); //helpful for develop, uncomment\n    console.log(state);   //and see console in browser\n  switch (action.type) {\n    \n    case \"SET_ITEM\":\n      return {\n        ...state,\n        item: action.item,\n      };\n\n      case \"SET_NEW_RELEASES\":\n        return {\n          ...state,\n          new_releases: action.new_releases,\n        };\n\n    case \"SEARCH_ARTIST\":\n      return {\n        ...state,\n        artist: action.artist,\n      };\n\n    case \"SEARCH_SONGS\":\n      return {\n        ...state,\n        songs: action.songs,\n      };\n  \n\n    case \"SET_TOKEN\":\n      return {\n        ...state,\n        token: action.token,\n      };\n\n    case \"SET_SPOTIFY\":\n      return {\n        ...state,\n        spotify: action.spotify,\n      };\n\n    case \"GET_ARTIST_TOP\":\n      return {\n        ...state,\n        artistTop: action.artistTop,\n      };\n\n    case \"GET_ARTIST_RELATED\":\n      return {\n        ...state,\n        artistRelated: action.artistRelated,\n      };\n\n    case \"GET_ARTIST_ALBUM\":\n      return {\n        ...state,\n        artistAlbum: action.artistAlbum,\n      };\n\n      case \"SEARCH_NEW_ARTIST\":\n      return {\n        ...state,\n        typeArtist: action.typeArtist,\n      };\n\n      case \"SEARCH_NEW_SONG\":\n      return {\n        ...state,\n        typeSong: action.typeSong,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { StateProvider } from \"./components/StateProvider\";\nimport reducer, { initialState } from \"./components/reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}